{
    "swagger": "2.0",
    "info": {
        "version": "1.0",
        "title": "BookStoreApp",
        "description": "This app is created for selling or buying books",
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        }
    },
    "host": "localhost:3000",
    "basePath": "/",
    "tags": [],
    "schemes": ["http"],
    "consumes": ["application/json"],
    "produces": ["application/json"],
    "paths": {
        "/adminRegistration": {
            "post": {
                "tags": ["BookStore"],
                "description": "Register Admin in Book Store",
                "parameters": [
                    {
                        "name": "Register",
                        "in": "body",
                        "description": "Admin Registration",
                        "schema": { 
                            "$ref": "#/definitions/registerUser"
                        }
                    }
                ],
                "produces": ["application/json"],
                "responses": {
                    "201": {
                        "description": "New user is Registered"
                    },
                    "409": {
                        "description": "User already exist"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },

        "/userRegistration": {
            "post": {
                "tags": ["BookStore"],
                "description": "Register Admin in Book Store",
                "parameters": [
                    {
                        "name": "Register",
                        "in": "body",
                        "description": "Admin Registration",
                        "schema": { 
                            "$ref": "#/definitions/registerUser"
                        }
                    }
                ],
                "produces": ["application/json"],
                "responses": {
                    "201": {
                        "description": "New user is Registered"
                    },
                    "409": {
                        "description": "User already exist"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/login": {
            "post": {
                "tags": ["Login"],
                "description": "Login user",
                "parameters": [
                    {
                        "name": "Login",
                        "in": "body",
                        "description": "User that we want to login",
                        "schema": {
                            "$ref": "#/definitions/loginUser"
                        }
                    }
                ],

                "produces": ["application/json"],
                "responses": {
                    "200": {
                        "description": "ok"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/forgotPassword": {
            "post": {
                "tags": ["forgotPassword"],
                "description": "Send password link",
                "parameters": [
                    {
                        "name": "forgotpassword",
                        "in": "body",
                        "description": "Sent password resent link",
                        "schema": {
                            "$ref": "#/definitions/forgotpassword"
                        }
                    }
                ],

                "produces": ["application/json"],
                "responses": {
                    "200": {
                        "description": "ok"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },

        "/reset-Password": {
            "put": {
                "tags": [
                    "reset password"
                ],
                "description": "Already registered ? Then reset password successfully !!",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "token for validation",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Reset Password",
                        "in": "body",
                        "description": "Reset Password with token",
                        "schema": {
                            "$ref": "#/definitions/resetPassword"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "reset password succesfully !!"
                    },
                    "400": {
                        "description": "Incorrect Password for reset password"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/books": {
            "post": {
                "tags": [
                    "Add Books"
                ],
                "description": "Add a book !!",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Token for vaidation",
                        "schema": {
                            "type": "string",
                            "required": true
                        }
                    },
                    {
                        "name": "Add Book",
                        "in": "body",
                        "description": "Book body",
                        "schema": {
                            "$ref": "#/definitions/books"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "schema": {
                    "$ref": "#/definitions/books"
                },
                "responses": {
                    "201": {
                        "description": "Create note succesfully !!"
                    },
                    "400": {
                        "description": "Please enter Valid Token"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/getbooks": {
            "get": {
                "tags": [
                    "Get Books"
                ],
                "description": "Get a  book !!",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Token for vaidation",
                        "schema": {
                            "type": "string",
                            "required": true
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "schema": {
                    "$ref": "#/definitions/books"
                },
                "responses": {
                    "201": {
                        "description": "Get note succesfully !!"
                    },
                    "401": {
                        "description": "Please enter Valid Token"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/getbooks/{id}": {
            "get": {
                "tags": [
                    "Get Books"
                ],
                "description": "Get a book by ID for perticuler person id",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Token for vaidation",
                        "schema": {
                            "type": "string",
                            "required": true
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of book you want to fetch",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "schema": {
                    "$ref": "#/definitions/books"
                },
                "responses": {
                    "201": {
                        "description": "Create note succesfully !!"
                    },
                    "400": {
                        "description": "Please enter Valid Token"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/books/{id}": {
            "put": {
                "tags": [
                    "update Books"
                ],
                "description": "update a book by ID for perticuler person id !!",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Token for vaidation",
                        "schema": {
                            "type": "string",
                            "required": true
                        }
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Id of book you want to update",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "body",
                        "name": "note",
                        "description": "Note body",
                        "schema": {
                            "$ref": "#/definitions/updatebooks"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "update book succesfully !!"
                    },
                    "401": {
                        "description": "Please enter Valid Token"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/deletebooks/{id}": {
            "delete": {
                "tags": [
                    "Delete Books"
                ],
                "description": "Delete a book by ID for perticuler person id !!",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Token for vaidation",
                        "schema": {
                            "type": "string",
                            "required": true
                        }
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Id of book you want to update",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Delete book succesfully !!"
                    },
                    "401": {
                        "description": "Please enter Valid Token"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/addToCart/{id}": {
            "post": {
                "tags": ["Add To Cart"],
                
                "description": "Add a book to the cart",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Enter token recieved in login",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Enter id of the book",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Add Bok to the cart",
                        "in": "body",
                        "description": "Add to Cart",
                        "schema": { 
                            "$ref": "#/definitions/addToCart"
                        }
                    }
                ],
                "produces": ["application/json"],
                "responses": {
                    "201": {
                        "description": "ok"
                    },
                    "401":{
                        "description": "Unauthorized token"
                    },
                    "400": {
                        "description": "Error"
                    }
                }
            }
        },
        "/carts":{
            "get":{
              "tags":["get carts"],
              "description":"Gets all carts",
              "parameters":[
                {
                  "in":"header",
                "name":"authorization",
                "description":"Token for validation",
                "schema":{
                  "type":"string",
                  "required":true
                }
                }
              ],
              "produces":["application/json"],
              "responses":{
                "200":{"description":"carts retrieved"},
                "500":{"description":"Couldnt retrieve carts"}
              }
            }
        },
        "/cart/{id}":{
            "get":{
              "tags":["get cart by id"],
              "description":"Gets cart by id",
              "parameters":[
                {
                  "in":"header",
                  "name":"authorization",
                  "description":"Token for validation",
                  "schema":{
                    "type":"string",
                    "required":true
                  }
                },
                {
                  "in":"path",
                  "name":"id",
                  "description":"User id",
                  "schema":{
                    "type":"string",
                    "required":true
                  }
                }
              ],
              "produces":["application/json"],
              "responses":{
                "200":{"description":"label Found"},
                "500":{"description":"label not Found"},
                "400":{"description":"Invalid Token"}
              }
            }
        }
    },
    "definitions": {
        "registerUser": {
            "type": "object",
            "properties": {
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "role":{
                    "type":"string"
                }
                
            }
        },
        "loginUser": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "forgotpassword": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "resetPassword": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string",
                    "description": "new password for user."
                }
            },
            "example": {
                "password": "cllwit@@"
            }
        },
        "books": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            },
            "example": {
                "author": "Write a author name...",
                "quantity": "quantity of books",
                "price": "price of the book",
                "title": "Write a title here.....",
                "description": "Write a description here....."
            }
        },
        "updatebooks": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            },
            "example": {
                "author": "Write a author name...",
                "quantity": "quantity of books",
                "price": "price of the book",
                "title": "Write a title here.....",
                "description": "Write a description here....."
            }
        },
        "addToCart": {
            "type": "object",
            "properties": {
                "qty": {
                    "type": "number"
                }
            }
        }
    }
}